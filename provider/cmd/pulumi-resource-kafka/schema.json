{
    "name": "kafka",
    "description": "A Pulumi package for creating and managing Kafka.",
    "keywords": [
        "pulumi",
        "kafka"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`kafka` Terraform Provider](https://github.com/Mongey/terraform-provider-kafka).",
    "repository": "https://github.com/pulumi/pulumi-kafka",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "kafka": "Kafka"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-kafka/sdk/v3/go/kafka",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing Kafka.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Mongey/terraform-provider-kafka)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-kafka` repo](https://github.com/pulumi/pulumi-kafka/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-kafka` repo](https://github.com/Mongey/terraform-provider-kafka/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Mongey/terraform-provider-kafka)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-kafka` repo](https://github.com/pulumi/pulumi-kafka/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-kafka` repo](https://github.com/Mongey/terraform-provider-kafka/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "bootstrapServers": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of kafka brokers\n"
            },
            "caCert": {
                "type": "string",
                "description": "CA certificate file to validate the server's certificate.\n"
            },
            "caCertFile": {
                "type": "string",
                "description": "Path to a CA certificate file to validate the server's certificate.\n",
                "deprecationMessage": "This parameter is now deprecated and will be removed in a later release, please use `ca_cert` instead."
            },
            "clientCert": {
                "type": "string",
                "description": "The client certificate.\n"
            },
            "clientCertFile": {
                "type": "string",
                "description": "Path to a file containing the client certificate.\n",
                "deprecationMessage": "This parameter is now deprecated and will be removed in a later release, please use `client_cert` instead."
            },
            "clientKey": {
                "type": "string",
                "description": "The private key that the certificate was issued for.\n"
            },
            "clientKeyFile": {
                "type": "string",
                "description": "Path to a file containing the private key that the certificate was issued for.\n",
                "deprecationMessage": "This parameter is now deprecated and will be removed in a later release, please use `client_key` instead."
            },
            "clientKeyPassphrase": {
                "type": "string",
                "description": "The passphrase for the private key that the certificate was issued for.\n"
            },
            "saslMechanism": {
                "type": "string",
                "description": "SASL mechanism, can be plain, scram-sha512, scram-sha256\n",
                "default": "plain",
                "defaultInfo": {
                    "environment": [
                        "KAFKA_SASL_MECHANISM"
                    ]
                }
            },
            "saslPassword": {
                "type": "string",
                "description": "Password for SASL authentication.\n"
            },
            "saslUsername": {
                "type": "string",
                "description": "Username for SASL authentication.\n"
            },
            "skipTlsVerify": {
                "type": "boolean",
                "description": "Set this to true only if the target Kafka server is an insecure development instance.\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "KAFKA_SKIP_VERIFY"
                    ]
                }
            },
            "timeout": {
                "type": "integer",
                "description": "Timeout in seconds\n"
            },
            "tlsEnabled": {
                "type": "boolean",
                "description": "Enable communication with the Kafka Cluster over TLS.\n",
                "default": true,
                "defaultInfo": {
                    "environment": [
                        "KAFKA_ENABLE_TLS"
                    ]
                }
            }
        },
        "defaults": [
            "bootstrapServers"
        ]
    },
    "provider": {
        "description": "The provider type for the kafka package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "bootstrapServers": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of kafka brokers\n"
            },
            "caCert": {
                "type": "string",
                "description": "CA certificate file to validate the server's certificate.\n"
            },
            "caCertFile": {
                "type": "string",
                "description": "Path to a CA certificate file to validate the server's certificate.\n",
                "deprecationMessage": "This parameter is now deprecated and will be removed in a later release, please use `ca_cert` instead."
            },
            "clientCert": {
                "type": "string",
                "description": "The client certificate.\n"
            },
            "clientCertFile": {
                "type": "string",
                "description": "Path to a file containing the client certificate.\n",
                "deprecationMessage": "This parameter is now deprecated and will be removed in a later release, please use `client_cert` instead."
            },
            "clientKey": {
                "type": "string",
                "description": "The private key that the certificate was issued for.\n"
            },
            "clientKeyFile": {
                "type": "string",
                "description": "Path to a file containing the private key that the certificate was issued for.\n",
                "deprecationMessage": "This parameter is now deprecated and will be removed in a later release, please use `client_key` instead."
            },
            "clientKeyPassphrase": {
                "type": "string",
                "description": "The passphrase for the private key that the certificate was issued for.\n"
            },
            "saslMechanism": {
                "type": "string",
                "description": "SASL mechanism, can be plain, scram-sha512, scram-sha256\n"
            },
            "saslPassword": {
                "type": "string",
                "description": "Password for SASL authentication.\n"
            },
            "saslUsername": {
                "type": "string",
                "description": "Username for SASL authentication.\n"
            },
            "skipTlsVerify": {
                "type": "boolean",
                "description": "Set this to true only if the target Kafka server is an insecure development instance.\n"
            },
            "timeout": {
                "type": "integer",
                "description": "Timeout in seconds\n"
            },
            "tlsEnabled": {
                "type": "boolean",
                "description": "Enable communication with the Kafka Cluster over TLS.\n"
            }
        },
        "required": [
            "bootstrapServers"
        ],
        "inputProperties": {
            "bootstrapServers": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of kafka brokers\n"
            },
            "caCert": {
                "type": "string",
                "description": "CA certificate file to validate the server's certificate.\n"
            },
            "caCertFile": {
                "type": "string",
                "description": "Path to a CA certificate file to validate the server's certificate.\n",
                "deprecationMessage": "This parameter is now deprecated and will be removed in a later release, please use `ca_cert` instead."
            },
            "clientCert": {
                "type": "string",
                "description": "The client certificate.\n"
            },
            "clientCertFile": {
                "type": "string",
                "description": "Path to a file containing the client certificate.\n",
                "deprecationMessage": "This parameter is now deprecated and will be removed in a later release, please use `client_cert` instead."
            },
            "clientKey": {
                "type": "string",
                "description": "The private key that the certificate was issued for.\n"
            },
            "clientKeyFile": {
                "type": "string",
                "description": "Path to a file containing the private key that the certificate was issued for.\n",
                "deprecationMessage": "This parameter is now deprecated and will be removed in a later release, please use `client_key` instead."
            },
            "clientKeyPassphrase": {
                "type": "string",
                "description": "The passphrase for the private key that the certificate was issued for.\n"
            },
            "saslMechanism": {
                "type": "string",
                "description": "SASL mechanism, can be plain, scram-sha512, scram-sha256\n",
                "default": "plain",
                "defaultInfo": {
                    "environment": [
                        "KAFKA_SASL_MECHANISM"
                    ]
                }
            },
            "saslPassword": {
                "type": "string",
                "description": "Password for SASL authentication.\n"
            },
            "saslUsername": {
                "type": "string",
                "description": "Username for SASL authentication.\n"
            },
            "skipTlsVerify": {
                "type": "boolean",
                "description": "Set this to true only if the target Kafka server is an insecure development instance.\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "KAFKA_SKIP_VERIFY"
                    ]
                }
            },
            "timeout": {
                "type": "integer",
                "description": "Timeout in seconds\n"
            },
            "tlsEnabled": {
                "type": "boolean",
                "description": "Enable communication with the Kafka Cluster over TLS.\n",
                "default": true,
                "defaultInfo": {
                    "environment": [
                        "KAFKA_ENABLE_TLS"
                    ]
                }
            }
        },
        "requiredInputs": [
            "bootstrapServers"
        ]
    },
    "resources": {
        "kafka:index/acl:Acl": {
            "properties": {
                "aclHost": {
                    "type": "string"
                },
                "aclOperation": {
                    "type": "string"
                },
                "aclPermissionType": {
                    "type": "string"
                },
                "aclPrincipal": {
                    "type": "string"
                },
                "aclResourceName": {
                    "type": "string",
                    "description": "The name of the resource\n"
                },
                "aclResourceType": {
                    "type": "string"
                },
                "resourcePatternTypeFilter": {
                    "type": "string"
                }
            },
            "required": [
                "aclHost",
                "aclOperation",
                "aclPermissionType",
                "aclPrincipal",
                "aclResourceName",
                "aclResourceType"
            ],
            "inputProperties": {
                "aclHost": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "aclOperation": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "aclPermissionType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "aclPrincipal": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "aclResourceName": {
                    "type": "string",
                    "description": "The name of the resource\n",
                    "willReplaceOnChanges": true
                },
                "aclResourceType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "resourcePatternTypeFilter": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "aclHost",
                "aclOperation",
                "aclPermissionType",
                "aclPrincipal",
                "aclResourceName",
                "aclResourceType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Acl resources.\n",
                "properties": {
                    "aclHost": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "aclOperation": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "aclPermissionType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "aclPrincipal": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "aclResourceName": {
                        "type": "string",
                        "description": "The name of the resource\n",
                        "willReplaceOnChanges": true
                    },
                    "aclResourceType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourcePatternTypeFilter": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "kafka:index/quota:Quota": {
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A map of string k/v properties.\n"
                },
                "entityName": {
                    "type": "string",
                    "description": "The name of the entity\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "The type of the entity (client-id, user, ip)\n"
                }
            },
            "required": [
                "entityName",
                "entityType"
            ],
            "inputProperties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A map of string k/v properties.\n",
                    "willReplaceOnChanges": true
                },
                "entityName": {
                    "type": "string",
                    "description": "The name of the entity\n",
                    "willReplaceOnChanges": true
                },
                "entityType": {
                    "type": "string",
                    "description": "The type of the entity (client-id, user, ip)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "entityName",
                "entityType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Quota resources.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "A map of string k/v properties.\n",
                        "willReplaceOnChanges": true
                    },
                    "entityName": {
                        "type": "string",
                        "description": "The name of the entity\n",
                        "willReplaceOnChanges": true
                    },
                    "entityType": {
                        "type": "string",
                        "description": "The type of the entity (client-id, user, ip)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "kafka:index/topic:Topic": {
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A map of string k/v attributes.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the topic.\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions.\n"
                },
                "replicationFactor": {
                    "type": "integer",
                    "description": "Number of replicas.\n"
                }
            },
            "required": [
                "name",
                "partitions",
                "replicationFactor"
            ],
            "inputProperties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A map of string k/v attributes.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the topic.\n",
                    "willReplaceOnChanges": true
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions.\n"
                },
                "replicationFactor": {
                    "type": "integer",
                    "description": "Number of replicas.\n"
                }
            },
            "requiredInputs": [
                "partitions",
                "replicationFactor"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Topic resources.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "A map of string k/v attributes.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the topic.\n",
                        "willReplaceOnChanges": true
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "Number of partitions.\n"
                    },
                    "replicationFactor": {
                        "type": "integer",
                        "description": "Number of replicas.\n"
                    }
                },
                "type": "object"
            }
        },
        "kafka:index/userScramCredential:UserScramCredential": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password of the credential\n",
                    "secret": true
                },
                "scramIterations": {
                    "type": "integer",
                    "description": "The number of SCRAM iterations used when generating the credential\n"
                },
                "scramMechanism": {
                    "type": "string",
                    "description": "The SCRAM mechanism used to generate the credential (SCRAM-SHA-256, SCRAM-SHA-512)\n"
                },
                "username": {
                    "type": "string",
                    "description": "The name of the credential\n"
                }
            },
            "required": [
                "password",
                "scramMechanism",
                "username"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "The password of the credential\n",
                    "secret": true
                },
                "scramIterations": {
                    "type": "integer",
                    "description": "The number of SCRAM iterations used when generating the credential\n"
                },
                "scramMechanism": {
                    "type": "string",
                    "description": "The SCRAM mechanism used to generate the credential (SCRAM-SHA-256, SCRAM-SHA-512)\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The name of the credential\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "password",
                "scramMechanism",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserScramCredential resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "The password of the credential\n",
                        "secret": true
                    },
                    "scramIterations": {
                        "type": "integer",
                        "description": "The number of SCRAM iterations used when generating the credential\n"
                    },
                    "scramMechanism": {
                        "type": "string",
                        "description": "The SCRAM mechanism used to generate the credential (SCRAM-SHA-256, SCRAM-SHA-512)\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The name of the credential\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "kafka:index:getTopic": {
            "inputs": {
                "description": "A collection of arguments for invoking getTopic.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTopic.\n",
                "properties": {
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partitions": {
                        "type": "integer"
                    },
                    "replicationFactor": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "config",
                    "name",
                    "partitions",
                    "replicationFactor",
                    "id"
                ]
            }
        }
    }
}