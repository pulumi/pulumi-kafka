// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kafka;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.kafka.UserScramCredentialArgs;
import com.pulumi.kafka.Utilities;
import com.pulumi.kafka.inputs.UserScramCredentialState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * SCRAM credentials can be imported using the format `username|scram_mechanism|password`:
 * 
 * ```sh
 * $ pulumi import kafka:index/userScramCredential:UserScramCredential example &#39;my-user|SCRAM-SHA-256|my-password&#39;
 * ```
 * 
 */
@ResourceType(type="kafka:index/userScramCredential:UserScramCredential")
public class UserScramCredential extends com.pulumi.resources.CustomResource {
    /**
     * The password of the credential (deprecated, use password_wo instead)
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return The password of the credential (deprecated, use password_wo instead)
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * Version identifier for the write-only password to track changes
     * 
     */
    @Export(name="passwordWoVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> passwordWoVersion;

    /**
     * @return Version identifier for the write-only password to track changes
     * 
     */
    public Output<Optional<String>> passwordWoVersion() {
        return Codegen.optional(this.passwordWoVersion);
    }
    /**
     * The number of SCRAM iterations used when generating the credential
     * 
     */
    @Export(name="scramIterations", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> scramIterations;

    /**
     * @return The number of SCRAM iterations used when generating the credential
     * 
     */
    public Output<Optional<Integer>> scramIterations() {
        return Codegen.optional(this.scramIterations);
    }
    /**
     * The SCRAM mechanism used to generate the credential (SCRAM-SHA-256, SCRAM-SHA-512)
     * 
     */
    @Export(name="scramMechanism", refs={String.class}, tree="[0]")
    private Output<String> scramMechanism;

    /**
     * @return The SCRAM mechanism used to generate the credential (SCRAM-SHA-256, SCRAM-SHA-512)
     * 
     */
    public Output<String> scramMechanism() {
        return this.scramMechanism;
    }
    /**
     * The name of the credential
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return The name of the credential
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserScramCredential(java.lang.String name) {
        this(name, UserScramCredentialArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserScramCredential(java.lang.String name, UserScramCredentialArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserScramCredential(java.lang.String name, UserScramCredentialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("kafka:index/userScramCredential:UserScramCredential", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private UserScramCredential(java.lang.String name, Output<java.lang.String> id, @Nullable UserScramCredentialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("kafka:index/userScramCredential:UserScramCredential", name, state, makeResourceOptions(options, id), false);
    }

    private static UserScramCredentialArgs makeArgs(UserScramCredentialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? UserScramCredentialArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserScramCredential get(java.lang.String name, Output<java.lang.String> id, @Nullable UserScramCredentialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new UserScramCredential(name, id, state, options);
    }
}
