// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kafka;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.kafka.AclArgs;
import com.pulumi.kafka.Utilities;
import com.pulumi.kafka.inputs.AclState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A resource for managing Kafka ACLs.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.kafka.Acl;
 * import com.pulumi.kafka.AclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new Acl("test", AclArgs.builder()
 *             .aclResourceName("syslog")
 *             .aclResourceType("Topic")
 *             .aclPrincipal("User:Alice")
 *             .aclHost("*")
 *             .aclOperation("Write")
 *             .aclPermissionType("Deny")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ACLs can be imported using the following pattern
 * 
 * ```sh
 * $ pulumi import kafka:index/acl:Acl test &#34;acl_principal|acl_host|acl_operation|acl_permission_type|resource_type|resource_name|resource_pattern_type_filter&#34;
 * ```
 * e.g.
 * 
 * ```sh
 * $ pulumi import kafka:index/acl:Acl test &#34;User:Alice|*|Write|Deny|Topic|syslog|Prefixed&#34;
 * ```
 * 
 */
@ResourceType(type="kafka:index/acl:Acl")
public class Acl extends com.pulumi.resources.CustomResource {
    /**
     * Host from which principal listed in `acl_principal`
     * will have access.
     * 
     */
    @Export(name="aclHost", refs={String.class}, tree="[0]")
    private Output<String> aclHost;

    /**
     * @return Host from which principal listed in `acl_principal`
     * will have access.
     * 
     */
    public Output<String> aclHost() {
        return this.aclHost;
    }
    /**
     * Operation that is being allowed or denied. Valid
     * values are `Unknown`, `Any`, `All`, `Read`, `Write`, `Create`, `Delete`, `Alter`,
     * `Describe`, `ClusterAction`, `DescribeConfigs`, `AlterConfigs`, `IdempotentWrite`.
     * 
     */
    @Export(name="aclOperation", refs={String.class}, tree="[0]")
    private Output<String> aclOperation;

    /**
     * @return Operation that is being allowed or denied. Valid
     * values are `Unknown`, `Any`, `All`, `Read`, `Write`, `Create`, `Delete`, `Alter`,
     * `Describe`, `ClusterAction`, `DescribeConfigs`, `AlterConfigs`, `IdempotentWrite`.
     * 
     */
    public Output<String> aclOperation() {
        return this.aclOperation;
    }
    /**
     * Type of permission. Valid values are `Unknown`,
     * `Any`, `Allow`, `Deny`.
     * 
     */
    @Export(name="aclPermissionType", refs={String.class}, tree="[0]")
    private Output<String> aclPermissionType;

    /**
     * @return Type of permission. Valid values are `Unknown`,
     * `Any`, `Allow`, `Deny`.
     * 
     */
    public Output<String> aclPermissionType() {
        return this.aclPermissionType;
    }
    /**
     * Principal that is being allowed or denied.
     * 
     */
    @Export(name="aclPrincipal", refs={String.class}, tree="[0]")
    private Output<String> aclPrincipal;

    /**
     * @return Principal that is being allowed or denied.
     * 
     */
    public Output<String> aclPrincipal() {
        return this.aclPrincipal;
    }
    /**
     * The name of the resource.
     * 
     */
    @Export(name="aclResourceName", refs={String.class}, tree="[0]")
    private Output<String> aclResourceName;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> aclResourceName() {
        return this.aclResourceName;
    }
    /**
     * The type of resource. Valid values are `Unknown`,
     * `Any`, `Topic`, `Group`, `Cluster`, `TransactionalID`.
     * 
     */
    @Export(name="aclResourceType", refs={String.class}, tree="[0]")
    private Output<String> aclResourceType;

    /**
     * @return The type of resource. Valid values are `Unknown`,
     * `Any`, `Topic`, `Group`, `Cluster`, `TransactionalID`.
     * 
     */
    public Output<String> aclResourceType() {
        return this.aclResourceType;
    }
    /**
     * The pattern filter. Valid values
     * are `Prefixed`, `Any`, `Match`, `Literal`. Default `Literal`.
     * 
     */
    @Export(name="resourcePatternTypeFilter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resourcePatternTypeFilter;

    /**
     * @return The pattern filter. Valid values
     * are `Prefixed`, `Any`, `Match`, `Literal`. Default `Literal`.
     * 
     */
    public Output<Optional<String>> resourcePatternTypeFilter() {
        return Codegen.optional(this.resourcePatternTypeFilter);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Acl(java.lang.String name) {
        this(name, AclArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Acl(java.lang.String name, AclArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Acl(java.lang.String name, AclArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("kafka:index/acl:Acl", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Acl(java.lang.String name, Output<java.lang.String> id, @Nullable AclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("kafka:index/acl:Acl", name, state, makeResourceOptions(options, id), false);
    }

    private static AclArgs makeArgs(AclArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AclArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Acl get(java.lang.String name, Output<java.lang.String> id, @Nullable AclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Acl(name, id, state, options);
    }
}
