// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the kafka package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'kafka';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * CA certificate file to validate the server's certificate.
     */
    public readonly caCert!: pulumi.Output<string | undefined>;
    /**
     * Path to a CA certificate file to validate the server's certificate.
     *
     * @deprecated This parameter is now deprecated and will be removed in a later release, please use `caCert` instead.
     */
    public readonly caCertFile!: pulumi.Output<string | undefined>;
    /**
     * The client certificate.
     */
    public readonly clientCert!: pulumi.Output<string | undefined>;
    /**
     * Path to a file containing the client certificate.
     *
     * @deprecated This parameter is now deprecated and will be removed in a later release, please use `clientCert` instead.
     */
    public readonly clientCertFile!: pulumi.Output<string | undefined>;
    /**
     * The private key that the certificate was issued for.
     */
    public readonly clientKey!: pulumi.Output<string | undefined>;
    /**
     * Path to a file containing the private key that the certificate was issued for.
     *
     * @deprecated This parameter is now deprecated and will be removed in a later release, please use `clientKey` instead.
     */
    public readonly clientKeyFile!: pulumi.Output<string | undefined>;
    /**
     * The passphrase for the private key that the certificate was issued for.
     */
    public readonly clientKeyPassphrase!: pulumi.Output<string | undefined>;
    /**
     * The version of Kafka protocol to use in `$MAJOR.$MINOR.$PATCH` format. Some features may not be available on older
     * versions. Default is 2.7.0.
     */
    public readonly kafkaVersion!: pulumi.Output<string | undefined>;
    /**
     * The AWS access key.
     */
    public readonly saslAwsAccessKey!: pulumi.Output<string | undefined>;
    /**
     * Path to a file containing the AWS pod identity authorization token
     */
    public readonly saslAwsContainerAuthorizationTokenFile!: pulumi.Output<string | undefined>;
    /**
     * URI to retrieve AWS credentials from
     */
    public readonly saslAwsContainerCredentialsFullUri!: pulumi.Output<string | undefined>;
    /**
     * External ID of the AWS IAM role to assume
     */
    public readonly saslAwsExternalId!: pulumi.Output<string | undefined>;
    /**
     * AWS profile name to use
     */
    public readonly saslAwsProfile!: pulumi.Output<string | undefined>;
    /**
     * AWS region where MSK is deployed.
     */
    public readonly saslAwsRegion!: pulumi.Output<string | undefined>;
    /**
     * Arn of an AWS IAM role to assume
     */
    public readonly saslAwsRoleArn!: pulumi.Output<string | undefined>;
    /**
     * The AWS secret key.
     */
    public readonly saslAwsSecretKey!: pulumi.Output<string | undefined>;
    /**
     * The AWS session token. Only required if you are using temporary security credentials.
     */
    public readonly saslAwsToken!: pulumi.Output<string | undefined>;
    /**
     * SASL mechanism, can be plain, scram-sha512, scram-sha256, aws-iam
     */
    public readonly saslMechanism!: pulumi.Output<string | undefined>;
    /**
     * Password for SASL authentication.
     */
    public readonly saslPassword!: pulumi.Output<string | undefined>;
    /**
     * The url to retrieve oauth2 tokens from, when using sasl mechanism oauthbearer
     */
    public readonly saslTokenUrl!: pulumi.Output<string | undefined>;
    /**
     * Username for SASL authentication.
     */
    public readonly saslUsername!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            if ((!args || args.bootstrapServers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bootstrapServers'");
            }
            resourceInputs["bootstrapServers"] = pulumi.output(args ? args.bootstrapServers : undefined).apply(JSON.stringify);
            resourceInputs["caCert"] = args ? args.caCert : undefined;
            resourceInputs["caCertFile"] = args ? args.caCertFile : undefined;
            resourceInputs["clientCert"] = args ? args.clientCert : undefined;
            resourceInputs["clientCertFile"] = args ? args.clientCertFile : undefined;
            resourceInputs["clientKey"] = args ? args.clientKey : undefined;
            resourceInputs["clientKeyFile"] = args ? args.clientKeyFile : undefined;
            resourceInputs["clientKeyPassphrase"] = args ? args.clientKeyPassphrase : undefined;
            resourceInputs["kafkaVersion"] = args ? args.kafkaVersion : undefined;
            resourceInputs["saslAwsAccessKey"] = args ? args.saslAwsAccessKey : undefined;
            resourceInputs["saslAwsContainerAuthorizationTokenFile"] = args ? args.saslAwsContainerAuthorizationTokenFile : undefined;
            resourceInputs["saslAwsContainerCredentialsFullUri"] = args ? args.saslAwsContainerCredentialsFullUri : undefined;
            resourceInputs["saslAwsCredsDebug"] = pulumi.output(args ? args.saslAwsCredsDebug : undefined).apply(JSON.stringify);
            resourceInputs["saslAwsExternalId"] = args ? args.saslAwsExternalId : undefined;
            resourceInputs["saslAwsProfile"] = args ? args.saslAwsProfile : undefined;
            resourceInputs["saslAwsRegion"] = args ? args.saslAwsRegion : undefined;
            resourceInputs["saslAwsRoleArn"] = args ? args.saslAwsRoleArn : undefined;
            resourceInputs["saslAwsSecretKey"] = args ? args.saslAwsSecretKey : undefined;
            resourceInputs["saslAwsSharedConfigFiles"] = pulumi.output(args ? args.saslAwsSharedConfigFiles : undefined).apply(JSON.stringify);
            resourceInputs["saslAwsToken"] = args ? args.saslAwsToken : undefined;
            resourceInputs["saslMechanism"] = (args ? args.saslMechanism : undefined) ?? (utilities.getEnv("KAFKA_SASL_MECHANISM") || "plain");
            resourceInputs["saslOauthScopes"] = pulumi.output(args ? args.saslOauthScopes : undefined).apply(JSON.stringify);
            resourceInputs["saslPassword"] = args ? args.saslPassword : undefined;
            resourceInputs["saslTokenUrl"] = args ? args.saslTokenUrl : undefined;
            resourceInputs["saslUsername"] = args ? args.saslUsername : undefined;
            resourceInputs["skipTlsVerify"] = pulumi.output((args ? args.skipTlsVerify : undefined) ?? (utilities.getEnvBoolean("KAFKA_SKIP_VERIFY") || false)).apply(JSON.stringify);
            resourceInputs["timeout"] = pulumi.output(args ? args.timeout : undefined).apply(JSON.stringify);
            resourceInputs["tlsEnabled"] = pulumi.output((args ? args.tlsEnabled : undefined) ?? (utilities.getEnvBoolean("KAFKA_ENABLE_TLS") || true)).apply(JSON.stringify);
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }

    /**
     * This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
     */
    terraformConfig(): pulumi.Output<Provider.TerraformConfigResult> {
        return pulumi.runtime.call("pulumi:providers:kafka/terraformConfig", {
            "__self__": this,
        }, this);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * A list of kafka brokers
     */
    bootstrapServers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * CA certificate file to validate the server's certificate.
     */
    caCert?: pulumi.Input<string>;
    /**
     * Path to a CA certificate file to validate the server's certificate.
     *
     * @deprecated This parameter is now deprecated and will be removed in a later release, please use `caCert` instead.
     */
    caCertFile?: pulumi.Input<string>;
    /**
     * The client certificate.
     */
    clientCert?: pulumi.Input<string>;
    /**
     * Path to a file containing the client certificate.
     *
     * @deprecated This parameter is now deprecated and will be removed in a later release, please use `clientCert` instead.
     */
    clientCertFile?: pulumi.Input<string>;
    /**
     * The private key that the certificate was issued for.
     */
    clientKey?: pulumi.Input<string>;
    /**
     * Path to a file containing the private key that the certificate was issued for.
     *
     * @deprecated This parameter is now deprecated and will be removed in a later release, please use `clientKey` instead.
     */
    clientKeyFile?: pulumi.Input<string>;
    /**
     * The passphrase for the private key that the certificate was issued for.
     */
    clientKeyPassphrase?: pulumi.Input<string>;
    /**
     * The version of Kafka protocol to use in `$MAJOR.$MINOR.$PATCH` format. Some features may not be available on older
     * versions. Default is 2.7.0.
     */
    kafkaVersion?: pulumi.Input<string>;
    /**
     * The AWS access key.
     */
    saslAwsAccessKey?: pulumi.Input<string>;
    /**
     * Path to a file containing the AWS pod identity authorization token
     */
    saslAwsContainerAuthorizationTokenFile?: pulumi.Input<string>;
    /**
     * URI to retrieve AWS credentials from
     */
    saslAwsContainerCredentialsFullUri?: pulumi.Input<string>;
    /**
     * Set this to true to turn AWS credentials debug.
     */
    saslAwsCredsDebug?: pulumi.Input<boolean>;
    /**
     * External ID of the AWS IAM role to assume
     */
    saslAwsExternalId?: pulumi.Input<string>;
    /**
     * AWS profile name to use
     */
    saslAwsProfile?: pulumi.Input<string>;
    /**
     * AWS region where MSK is deployed.
     */
    saslAwsRegion?: pulumi.Input<string>;
    /**
     * Arn of an AWS IAM role to assume
     */
    saslAwsRoleArn?: pulumi.Input<string>;
    /**
     * The AWS secret key.
     */
    saslAwsSecretKey?: pulumi.Input<string>;
    /**
     * List of paths to AWS shared config files.
     */
    saslAwsSharedConfigFiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The AWS session token. Only required if you are using temporary security credentials.
     */
    saslAwsToken?: pulumi.Input<string>;
    /**
     * SASL mechanism, can be plain, scram-sha512, scram-sha256, aws-iam
     */
    saslMechanism?: pulumi.Input<string>;
    /**
     * OAuth scopes to request when using the oauthbearer mechanism
     */
    saslOauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Password for SASL authentication.
     */
    saslPassword?: pulumi.Input<string>;
    /**
     * The url to retrieve oauth2 tokens from, when using sasl mechanism oauthbearer
     */
    saslTokenUrl?: pulumi.Input<string>;
    /**
     * Username for SASL authentication.
     */
    saslUsername?: pulumi.Input<string>;
    /**
     * Set this to true only if the target Kafka server is an insecure development instance.
     */
    skipTlsVerify?: pulumi.Input<boolean>;
    /**
     * Timeout in seconds
     */
    timeout?: pulumi.Input<number>;
    /**
     * Enable communication with the Kafka Cluster over TLS.
     */
    tlsEnabled?: pulumi.Input<boolean>;
}

export namespace Provider {
    /**
     * The results of the Provider.terraformConfig method.
     */
    export interface TerraformConfigResult {
        readonly result: {[key: string]: any};
    }

}
